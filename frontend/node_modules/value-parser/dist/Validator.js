'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _validators = require('./validators');

var validators = _interopRequireWildcard(_validators);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var Validator = function Validator(value, validator) {

  var isValid = null;

  var validations = [];
  var checkValidations = function checkValidations() {
    return validations.filter(function (item) {
      return item === false;
    });
  };

  if (!validator) return isValid;

  validator.forEach(function (item) {
    var validatorResponse = null;
    if ((typeof item === 'undefined' ? 'undefined' : _typeof(item)) == 'object') {
      var key = Object.keys(item)[0];
      if (!validators.hasOwnProperty(key)) return;
      validatorResponse = validators[key](value, item[key]);
    }
    if (typeof item == 'string') {
      if (!validators.hasOwnProperty(item)) return;
      validatorResponse = validators[item](value);
    }
    validations.push(validatorResponse);
  });

  isValid = validations.length ? checkValidations().length < 1 : null;

  return isValid;
};

exports.default = Validator;