import React from 'react';
import PropTypes from 'prop-types';

import parsePropsAsBulmaClasses from 'components/_utils/parsePropsAsBulmaClasses';
import { getTypeOf } from 'utilsfn';

const Button = (props) => {

  let buttonCSSClass = `button ${
    parsePropsAsBulmaClasses(props)
  }`;

  if (props.className) buttonCSSClass = props.className;

  const children = React.Children.toArray(props.children).map((element, index) => {
    if (getTypeOf(element) === 'String') {
      return (<span key={index}>{element}</span>);
    } else {
      return element;
    }
  });

  return (
    <button
      type={props.submit ? 'submit' : 'button'}
      data-spec-selector={props.specSelector}
      className={buttonCSSClass}
      onClick={props.onClick}
      style={props.style}
      disabled={props.disabled || props.isDisabled}
      aria-hidden={props.isStatic}
      tabIndex={props.isStatic ? -1 : props.tabIndex}>
      {children}
    </button>
  );

};

Button.propTypes = {
  children: PropTypes.any.isRequired,
  onClick: PropTypes.func,
  disabled: PropTypes.bool
};

export default Button;
