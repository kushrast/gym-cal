'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Input = require('./components/Input');

var _Input2 = _interopRequireDefault(_Input);

var _Field = require('./components/Field');

var _Field2 = _interopRequireDefault(_Field);

var _Form = require('../Form');

var _Form2 = _interopRequireDefault(_Form);

var _Button = require('../Button');

var _Button2 = _interopRequireDefault(_Button);

var _Control = require('./components/Control');

var _Control2 = _interopRequireDefault(_Control);

var _Icon = require('../Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _fieldCreator = require('./fieldCreator');

var _fieldCreator2 = _interopRequireDefault(_fieldCreator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FormFieldSearch = function FormFieldSearch(props) {

  var isValid = props.isValid !== null && !props.isValid && !props.isEmpty;

  return _react2.default.createElement(
    _Form2.default,
    { id: 'search', onSubmit: props.onSubmit, autoFocus: true },
    _react2.default.createElement(
      _Field2.default,
      _extends({}, props, { hasAddons: true }),
      _react2.default.createElement(
        _Control2.default,
        props,
        _react2.default.createElement(_Input2.default, _extends({}, (0, _Input.propsObject)(props), {
          isDanger: isValid || props.forceInvalid
        }))
      ),
      _react2.default.createElement(
        _Control2.default,
        _extends({}, props, { style: null }),
        _react2.default.createElement(
          _Button2.default,
          { type: 'submit', isFeatured: true },
          _react2.default.createElement(_Icon2.default, { name: 'fas fa-search' })
        )
      ),
      props.forceInvalid && props.errorMessage ? _react2.default.createElement(
        'p',
        { className: 'help is-danger' },
        props.errorMessage
      ) : null
    )
  );
};

exports.default = (0, _fieldCreator2.default)(FormFieldSearch, {
  masks: [],
  validators: []
});