'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Button = require('../Button');

var _Button2 = _interopRequireDefault(_Button);

var _Header = require('../Header');

var _Header2 = _interopRequireDefault(_Header);

var _Icon = require('../Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ModalBody = function (_React$PureComponent) {
  _inherits(ModalBody, _React$PureComponent);

  function ModalBody() {
    _classCallCheck(this, ModalBody);

    var _this = _possibleConstructorReturn(this, (ModalBody.__proto__ || Object.getPrototypeOf(ModalBody)).call(this));

    _this.state = {
      isOpen: false
    };
    return _this;
  }

  _createClass(ModalBody, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.state.isOpen != this.props.isOpen) {
        this.setState({ isOpen: this.props.isOpen });
        if (this.props.onOpen && this.props.isOpen == true) this.props.onOpen();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.state.isOpen != nextProps.isOpen) {
        this.setState({ isOpen: nextProps.isOpen });
        if (this.props.onOpen && nextProps.isOpen === true) this.props.onOpen();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var modalCSSClass = 'custom-modal' + (this.state.isOpen ? ' is-active' : '') + (this.props.responsive === false ? '' : ' is-responsive');
      return _react2.default.createElement(
        'div',
        { className: modalCSSClass },
        _react2.default.createElement(
          'div',
          { className: 'custom-modal-content' },
          _react2.default.createElement(
            'header',
            { className: 'custom-modal-header' },
            _react2.default.createElement(
              _Header2.default,
              null,
              this.props.title
            ),
            !this.props.disableClose ? _react2.default.createElement(
              _Button2.default,
              { isBare: true, onClick: this.close.bind(this) },
              _react2.default.createElement(_Icon2.default, { name: 'fas fa-times' })
            ) : null
          ),
          _react2.default.createElement(
            'div',
            { className: 'custom-modal-body' },
            this.props.children
          )
        ),
        _react2.default.createElement('div', {
          className: 'custom-modal-background',
          role: 'button',
          tabIndex: '0',
          onKeyDown: !this.props.disableClose && !this.props.disableBackground ? this.close.bind(this) : null,
          onClick: !this.props.disableClose && !this.props.disableBackground ? this.close.bind(this) : null
        })
      );
    }
  }, {
    key: 'close',
    value: function close() {
      this.setState({ isOpen: false });
      if (this.props.onClose) this.props.onClose();
    }
  }]);

  return ModalBody;
}(_react2.default.PureComponent);

;

var body = document.body;

var Portal = function (_React$Component) {
  _inherits(Portal, _React$Component);

  function Portal(props) {
    _classCallCheck(this, Portal);

    var _this2 = _possibleConstructorReturn(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).call(this, props));

    _this2.element = document.createElement('div');
    return _this2;
  }

  _createClass(Portal, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      body.appendChild(this.element);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      body.removeChild(this.element);
    }
  }, {
    key: 'render',
    value: function render() {
      return _reactDom2.default.createPortal(this.props.children, this.element);
    }
  }]);

  return Portal;
}(_react2.default.Component);

var Modal = function Modal(props) {
  return _react2.default.createElement(
    Portal,
    null,
    _react2.default.createElement(ModalBody, props)
  );
};

exports.default = Modal;